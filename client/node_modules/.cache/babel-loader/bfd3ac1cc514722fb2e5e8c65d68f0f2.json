{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, getTabIndex, useRtl, validatePackage, dispatchEvent, Keys, useAsyncFocusBlur, IconWrap } from '@progress/kendo-react-common';\nimport { packageMetadata } from '../package-metadata';\nimport { chevronDownIcon, chevronUpIcon } from '@progress/kendo-svg-icons';\n/**\n * Represents the [KendoReact ExpansionPanel component]({% slug overview_expansionpanel %}).\n */\n\nexport var ExpansionPanel = React.forwardRef(function (props, target) {\n  var _a, _b;\n\n  validatePackage(packageMetadata);\n  var elementRef = React.useRef(null);\n\n  var _c = React.useState(false),\n      focused = _c[0],\n      setFocused = _c[1];\n\n  var getImperativeHandle = React.useCallback(function () {\n    return {\n      element: elementRef.current\n    };\n  }, []);\n  React.useImperativeHandle(target, getImperativeHandle);\n  var _d = props.expanded,\n      expanded = _d === void 0 ? false : _d,\n      disabled = props.disabled,\n      title = props.title,\n      subtitle = props.subtitle,\n      onAction = props.onAction,\n      expandIcon = props.expandIcon,\n      collapseIcon = props.collapseIcon,\n      expandSVGIcon = props.expandSVGIcon,\n      collapseSVGIcon = props.collapseSVGIcon;\n  var onClick = React.useCallback(function (event) {\n    dispatchEvent(onAction, event, getImperativeHandle(), {\n      expanded: expanded\n    });\n  }, [onAction, expanded]);\n  var onKeyDown = React.useCallback(function (event) {\n    if (event.keyCode === Keys.enter || event.keyCode === Keys.space) {\n      event.preventDefault();\n      dispatchEvent(onAction, event, getImperativeHandle(), {\n        expanded: expanded\n      });\n    }\n  }, [onAction, expanded]);\n  var handleFocus = React.useCallback(function () {\n    if (props.disabled) {\n      return;\n    }\n\n    setFocused(true);\n  }, [props.disabled]);\n  var handleBlur = React.useCallback(function () {\n    if (props.disabled) {\n      return;\n    }\n\n    setFocused(false);\n  }, [props.disabled]);\n\n  var _e = useAsyncFocusBlur({\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  }),\n      onFocus = _e.onFocus,\n      onBlur = _e.onBlur;\n\n  return React.createElement(\"div\", {\n    ref: elementRef,\n    className: classNames('k-expander', props.className, {\n      'k-expanded': expanded,\n      'k-focus': focused && !disabled,\n      'k-disabled': disabled\n    }),\n    onFocus: onFocus,\n    onBlur: onBlur,\n    style: props.style,\n    id: props.id,\n    dir: useRtl(elementRef, props.dir),\n    onKeyDown: disabled ? undefined : onKeyDown\n  }, React.createElement(\"div\", {\n    role: 'button',\n    \"aria-controls\": props.ariaControls,\n    \"aria-expanded\": expanded,\n    \"aria-disabled\": disabled,\n    tabIndex: getTabIndex(props.tabIndex, disabled),\n    className: \"k-expander-header\",\n    onClick: disabled ? undefined : onClick\n  }, title !== undefined ? React.createElement(\"div\", {\n    className: \"k-expander-title\"\n  }, title) : undefined, React.createElement(\"span\", {\n    className: \"k-spacer\"\n  }), subtitle !== undefined ? React.createElement(\"div\", {\n    className: \"k-expander-sub-title\"\n  }, subtitle) : undefined, React.createElement(\"span\", {\n    className: \"k-expander-indicator\"\n  }, React.createElement(IconWrap, {\n    name: !expanded ? !expandIcon ? 'chevron-down' : undefined : !collapseIcon ? 'chevron-up' : undefined,\n    icon: !expanded ? !expandSVGIcon && !expandIcon ? chevronDownIcon : expandSVGIcon : !collapseSVGIcon && !collapseIcon ? chevronUpIcon : collapseSVGIcon,\n    className: classNames(expanded ? (_a = {}, _a[String(collapseIcon)] = Boolean(collapseIcon), _a) : (_b = {}, _b[String(expandIcon)] = Boolean(expandIcon), _b))\n  }))), props.children);\n});\nExpansionPanel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  dir: PropTypes.string,\n  id: PropTypes.string,\n  tabIndex: PropTypes.number,\n  title: PropTypes.node,\n  subtitle: PropTypes.node,\n  expandIcon: PropTypes.string,\n  collapseIcon: PropTypes.string,\n  expanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onAction: PropTypes.func\n};\nExpansionPanel.displayName = 'KendoReactExpansionPanel';","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/node_modules/@progress/kendo-react-layout/dist/es/expansionpanel/ExpansionPanel.js"],"names":["React","PropTypes","classNames","getTabIndex","useRtl","validatePackage","dispatchEvent","Keys","useAsyncFocusBlur","IconWrap","packageMetadata","chevronDownIcon","chevronUpIcon","ExpansionPanel","forwardRef","props","target","_a","_b","elementRef","useRef","_c","useState","focused","setFocused","getImperativeHandle","useCallback","element","current","useImperativeHandle","_d","expanded","disabled","title","subtitle","onAction","expandIcon","collapseIcon","expandSVGIcon","collapseSVGIcon","onClick","event","onKeyDown","keyCode","enter","space","preventDefault","handleFocus","handleBlur","_e","onFocus","onBlur","createElement","ref","className","style","id","dir","undefined","role","ariaControls","tabIndex","name","icon","String","Boolean","children","propTypes","node","string","object","number","bool","func","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, getTabIndex, useRtl, validatePackage, dispatchEvent, Keys, useAsyncFocusBlur, IconWrap } from '@progress/kendo-react-common';\nimport { packageMetadata } from '../package-metadata';\nimport { chevronDownIcon, chevronUpIcon } from '@progress/kendo-svg-icons';\n/**\n * Represents the [KendoReact ExpansionPanel component]({% slug overview_expansionpanel %}).\n */\nexport var ExpansionPanel = React.forwardRef(function (props, target) {\n    var _a, _b;\n    validatePackage(packageMetadata);\n    var elementRef = React.useRef(null);\n    var _c = React.useState(false), focused = _c[0], setFocused = _c[1];\n    var getImperativeHandle = React.useCallback(function () { return ({ element: elementRef.current }); }, []);\n    React.useImperativeHandle(target, getImperativeHandle);\n    var _d = props.expanded, expanded = _d === void 0 ? false : _d, disabled = props.disabled, title = props.title, subtitle = props.subtitle, onAction = props.onAction, expandIcon = props.expandIcon, collapseIcon = props.collapseIcon, expandSVGIcon = props.expandSVGIcon, collapseSVGIcon = props.collapseSVGIcon;\n    var onClick = React.useCallback(function (event) {\n        dispatchEvent(onAction, event, getImperativeHandle(), { expanded: expanded });\n    }, [onAction, expanded]);\n    var onKeyDown = React.useCallback(function (event) {\n        if (event.keyCode === Keys.enter || event.keyCode === Keys.space) {\n            event.preventDefault();\n            dispatchEvent(onAction, event, getImperativeHandle(), { expanded: expanded });\n        }\n    }, [onAction, expanded]);\n    var handleFocus = React.useCallback(function () {\n        if (props.disabled) {\n            return;\n        }\n        setFocused(true);\n    }, [props.disabled]);\n    var handleBlur = React.useCallback(function () {\n        if (props.disabled) {\n            return;\n        }\n        setFocused(false);\n    }, [props.disabled]);\n    var _e = useAsyncFocusBlur({ onFocus: handleFocus, onBlur: handleBlur }), onFocus = _e.onFocus, onBlur = _e.onBlur;\n    return (React.createElement(\"div\", { ref: elementRef, className: classNames('k-expander', props.className, {\n            'k-expanded': expanded,\n            'k-focus': focused && !disabled,\n            'k-disabled': disabled\n        }), onFocus: onFocus, onBlur: onBlur, style: props.style, id: props.id, dir: useRtl(elementRef, props.dir), onKeyDown: disabled ? undefined : onKeyDown },\n        React.createElement(\"div\", { role: 'button', \"aria-controls\": props.ariaControls, \"aria-expanded\": expanded, \"aria-disabled\": disabled, tabIndex: getTabIndex(props.tabIndex, disabled), className: \"k-expander-header\", onClick: disabled ? undefined : onClick },\n            title !== undefined ? React.createElement(\"div\", { className: \"k-expander-title\" }, title) : undefined,\n            React.createElement(\"span\", { className: \"k-spacer\" }),\n            subtitle !== undefined ? React.createElement(\"div\", { className: \"k-expander-sub-title\" }, subtitle) : undefined,\n            React.createElement(\"span\", { className: \"k-expander-indicator\" },\n                React.createElement(IconWrap, { name: !expanded\n                        ? !expandIcon ? 'chevron-down' : undefined\n                        : !collapseIcon ? 'chevron-up' : undefined, icon: !expanded\n                        ? (!expandSVGIcon && !expandIcon) ? chevronDownIcon : expandSVGIcon\n                        : (!collapseSVGIcon && !collapseIcon) ? chevronUpIcon : collapseSVGIcon, className: classNames(expanded\n                        ? (_a = {},\n                            _a[String(collapseIcon)] = Boolean(collapseIcon),\n                            _a) : (_b = {},\n                        _b[String(expandIcon)] = Boolean(expandIcon),\n                        _b)) }))),\n        props.children));\n});\nExpansionPanel.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    dir: PropTypes.string,\n    id: PropTypes.string,\n    tabIndex: PropTypes.number,\n    title: PropTypes.node,\n    subtitle: PropTypes.node,\n    expandIcon: PropTypes.string,\n    collapseIcon: PropTypes.string,\n    expanded: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onAction: PropTypes.func\n};\nExpansionPanel.displayName = 'KendoReactExpansionPanel';\n"]},"metadata":{},"sourceType":"module"}
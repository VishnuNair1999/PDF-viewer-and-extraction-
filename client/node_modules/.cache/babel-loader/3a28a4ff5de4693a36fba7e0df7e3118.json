{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Desktop\\\\AuthInMern\\\\client\\\\src\\\\components\\\\Message\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Chat } from '@progress/kendo-react-conversational-ui';\nimport marked from 'marked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageTemplate = props => {\n  let message = props.item;\n  let parser = marked.setOptions({});\n  let parsedMessage = parser.parse(message.text);\n  let htmlToinsert = {\n    __html: parsedMessage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"k-chat-bubble\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: htmlToinsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_c = MessageTemplate;\nconst user = {\n  id: 1\n};\nconst bot = {\n  id: 0\n};\nconst initialMessages = [{\n  author: bot,\n  text: 'Type in some _Markdown_ to see it **rendered** here'\n}];\n\nconst App = () => {\n  _s();\n\n  const [messages, setMessages] = React.useState(initialMessages);\n\n  const addNewMessage = event => {\n    setMessages([...messages, event.message]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      user: user,\n      messages: messages,\n      onMessageSend: addNewMessage,\n      width: 400,\n      messageTemplate: MessageTemplate,\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"OrQCFeJqL9pS8aNDR4fjm9C95KQ=\");\n\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 17\n}, this), document.querySelector('my-app'));\nexport default Message;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MessageTemplate\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/src/components/Message/index.jsx"],"names":["React","ReactDOM","Chat","marked","MessageTemplate","props","message","item","parser","setOptions","parsedMessage","parse","text","htmlToinsert","__html","user","id","bot","initialMessages","author","App","messages","setMessages","useState","addNewMessage","event","render","document","querySelector","Message"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,IAAT,QAAqB,yCAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,MAAIC,OAAO,GAAGD,KAAK,CAACE,IAApB;AACA,MAAIC,MAAM,GAAGL,MAAM,CAACM,UAAP,CAAkB,EAAlB,CAAb;AACA,MAAIC,aAAa,GAAGF,MAAM,CAACG,KAAP,CAAaL,OAAO,CAACM,IAArB,CAApB;AACA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAEJ;AADS,GAAnB;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACD;AAAK,MAAA,uBAAuB,EAAEG;AAA9B;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAVA;;KAAMT,e;AAWP,MAAMW,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE;AADO,CAAb;AAGA,MAAMC,GAAG,GAAG;AACVD,EAAAA,EAAE,EAAE;AADM,CAAZ;AAGA,MAAME,eAAe,GAAG,CAAC;AACvBC,EAAAA,MAAM,EAAEF,GADe;AAEvBL,EAAAA,IAAI,EAAE;AAFiB,CAAD,CAAxB;;AAIA,MAAMQ,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,KAAK,CAACuB,QAAN,CAAeL,eAAf,CAAhC;;AACA,QAAMM,aAAa,GAAGC,KAAK,IAAI;AAC7BH,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcI,KAAK,CAACnB,OAApB,CAAD,CAAX;AACD,GAFD;;AAGA,sBAAO;AAAA,2BACD,QAAC,IAAD;AAAM,MAAA,IAAI,EAAES,IAAZ;AAAkB,MAAA,QAAQ,EAAEM,QAA5B;AAAsC,MAAA,aAAa,EAAEG,aAArD;AAAoE,MAAA,KAAK,EAAE,GAA3E;AAAgF,MAAA,eAAe,EAAEpB,eAAjG;AAAkH,MAAA,WAAW,EAAE;AAA/H;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CARD;;GAAMgB,G;;MAAAA,G;AASNnB,QAAQ,CAACyB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAzB;AAEA,eAAeC,OAAf","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Chat } from '@progress/kendo-react-conversational-ui';\r\nimport marked from 'marked';\r\n\r\n const MessageTemplate = props => {\r\n  let message = props.item;\r\n  let parser = marked.setOptions({});\r\n  let parsedMessage = parser.parse(message.text);\r\n  let htmlToinsert = {\r\n    __html: parsedMessage\r\n  };\r\n  return <div className=\"k-chat-bubble\">\r\n        <div dangerouslySetInnerHTML={htmlToinsert} />\r\n      </div>;\r\n};\r\nconst user = {\r\n  id: 1\r\n};\r\nconst bot = {\r\n  id: 0\r\n};\r\nconst initialMessages = [{\r\n  author: bot,\r\n  text: 'Type in some _Markdown_ to see it **rendered** here'\r\n}];\r\nconst App = () => {\r\n  const [messages, setMessages] = React.useState(initialMessages);\r\n  const addNewMessage = event => {\r\n    setMessages([...messages, event.message]);\r\n  };\r\n  return <div>\r\n        <Chat user={user} messages={messages} onMessageSend={addNewMessage} width={400} messageTemplate={MessageTemplate} placeholder={\"Type a message...\"} />\r\n      </div>;\r\n};\r\nReactDOM.render(<App />, document.querySelector('my-app'));\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}
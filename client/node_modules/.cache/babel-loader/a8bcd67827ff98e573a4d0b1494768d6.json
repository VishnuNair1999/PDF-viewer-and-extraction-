{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFObject from \"./PDFObject\";\n\nvar PDFInvalidObject =\n/** @class */\nfunction (_super) {\n  __extends(PDFInvalidObject, _super);\n\n  function PDFInvalidObject(data) {\n    var _this = _super.call(this) || this;\n\n    _this.data = data;\n    return _this;\n  }\n\n  PDFInvalidObject.prototype.clone = function () {\n    return PDFInvalidObject.of(this.data.slice());\n  };\n\n  PDFInvalidObject.prototype.toString = function () {\n    return \"PDFInvalidObject(\" + this.data.length + \" bytes)\";\n  };\n\n  PDFInvalidObject.prototype.sizeInBytes = function () {\n    return this.data.length;\n  };\n\n  PDFInvalidObject.prototype.copyBytesInto = function (buffer, offset) {\n    var length = this.data.length;\n\n    for (var idx = 0; idx < length; idx++) {\n      buffer[offset++] = this.data[idx];\n    }\n\n    return length;\n  };\n\n  PDFInvalidObject.of = function (data) {\n    return new PDFInvalidObject(data);\n  };\n\n  return PDFInvalidObject;\n}(PDFObject);\n\nexport default PDFInvalidObject;","map":{"version":3,"sources":["C:\\Users\\vishn\\Desktop\\AuthInMern\\client\\node_modules\\pdf-lib\\src\\core\\objects\\PDFInvalidObject.ts"],"names":[],"mappings":";AAAA,OAAO,SAAP,MAAgB,aAAhB;;AAEA,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAK7B,WAAA,gBAAA,CAAoB,IAApB,EAAoC;AAApC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAEE,IAAA,KAAI,CAAC,IAAL,GAAY,IAAZ;;AACD;;AAED,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,WAAO,gBAAgB,CAAC,EAAjB,CAAoB,KAAK,IAAL,CAAU,KAAV,EAApB,CAAP;AACD,GAFD;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,sBAAoB,KAAK,IAAL,CAAU,MAA9B,GAAoC,SAA3C;AACD,GAFD;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,WAAO,KAAK,IAAL,CAAU,MAAjB;AACD,GAFD;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,MAAd,EAAkC,MAAlC,EAAgD;AAC9C,QAAM,MAAM,GAAG,KAAK,IAAL,CAAU,MAAzB;;AACA,SAAK,IAAI,GAAG,GAAG,CAAf,EAAkB,GAAG,GAAG,MAAxB,EAAgC,GAAG,EAAnC,EAAuC;AACrC,MAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,KAAK,IAAL,CAAU,GAAV,CAAnB;AACD;;AACD,WAAO,MAAP;AACD,GAND;;AArBO,EAAA,gBAAA,CAAA,EAAA,GAAK,UAAC,IAAD,EAAiB;AAAK,WAAA,IAAI,gBAAJ,CAAA,IAAA,CAAA;AAA0B,GAArD;;AA4BT,SAAA,gBAAA;AAAC,CA7BD,CAA+B,SAA/B,CAAA;;AA+BA,eAAe,gBAAf","sourcesContent":["import PDFObject from 'src/core/objects/PDFObject';\n\nclass PDFInvalidObject extends PDFObject {\n  static of = (data: Uint8Array) => new PDFInvalidObject(data);\n\n  private readonly data: Uint8Array;\n\n  private constructor(data: Uint8Array) {\n    super();\n    this.data = data;\n  }\n\n  clone(): PDFInvalidObject {\n    return PDFInvalidObject.of(this.data.slice());\n  }\n\n  toString(): string {\n    return `PDFInvalidObject(${this.data.length} bytes)`;\n  }\n\n  sizeInBytes(): number {\n    return this.data.length;\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    const length = this.data.length;\n    for (let idx = 0; idx < length; idx++) {\n      buffer[offset++] = this.data[idx];\n    }\n    return length;\n  }\n}\n\nexport default PDFInvalidObject;\n"]},"metadata":{},"sourceType":"module"}
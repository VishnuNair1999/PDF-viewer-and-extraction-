{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Desktop\\\\AuthInMern\\\\client\\\\src\\\\components\\\\pdfViewer\\\\pdfViewer.js\";\nimport React, { Component } from 'react';\nimport { pdfjs, Document, Page } from 'react-pdf'; // Added missing imports for Document and Page\n\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nclass PDFViewer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = e => {\n      const file = e.target.files[0];\n\n      if (file) {\n        this.setState({\n          file,\n          pdfName: file.name\n        });\n        const fileReader = new FileReader();\n\n        fileReader.onload = () => {\n          const {\n            result\n          } = fileReader;\n          this.saveFile(result);\n        };\n\n        fileReader.readAsArrayBuffer(file);\n      }\n    };\n\n    this.onDocumentLoadSuccess = _ref => {\n      let {\n        numPages\n      } = _ref;\n      this.setState({\n        numPages\n      });\n    };\n\n    this.saveFile = async fileData => {\n      try {\n        const res = await axios.post('/api/upload', {\n          fileData\n        });\n        console.log(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleFileUpload = () => {\n      // You should implement the logic for file upload here.\n      // You may use axios to send the file to your server.\n      console.log('File upload logic goes here');\n    };\n\n    this.state = {\n      numPages: null,\n      file: null,\n      pdfName: ''\n    };\n    this.fileInput = /*#__PURE__*/React.createRef(); // Added missing ref definition\n  }\n\n  componentDidMount() {\n    this.fileInput.current.click();\n  }\n\n  render() {\n    const {\n      numPages,\n      file,\n      pdfName\n    } = this.state;\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Upload a PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            value: pdfName,\n            label: \"PDF Name\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: this.fileInput,\n            style: {\n              display: 'none'\n            },\n            onChange: this.handleFileInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 26\n            }, this),\n            disabled: !file,\n            onClick: this.handleFileUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '70vh',\n              border: '1px solid rgba(0, 0, 0, 0.5)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Document, {\n              file: file,\n              onLoadSuccess: this.onDocumentLoadSuccess,\n              children: /*#__PURE__*/_jsxDEV(Page, {\n                pageNumber: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Page \", numPages || '--']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PDFViewer;","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/src/components/pdfViewer/pdfViewer.js"],"names":["React","Component","pdfjs","Document","Page","axios","Grid","Typography","TextField","Button","makeStyles","SaveIcon","GlobalWorkerOptions","workerSrc","version","useStyles","theme","button","margin","spacing","PDFViewer","constructor","props","handleFileInputChange","e","file","target","files","setState","pdfName","name","fileReader","FileReader","onload","result","saveFile","readAsArrayBuffer","onDocumentLoadSuccess","numPages","fileData","res","post","console","log","data","err","handleFileUpload","state","fileInput","createRef","componentDidMount","current","click","render","classes","readOnly","display","height","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { pdfjs, Document, Page } from 'react-pdf'; // Added missing imports for Document and Page\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nclass PDFViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numPages: null,\r\n      file: null,\r\n      pdfName: '',\r\n    };\r\n    this.fileInput = React.createRef(); // Added missing ref definition\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fileInput.current.click();\r\n  }\r\n\r\n  handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      this.setState({ file, pdfName: file.name });\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        const { result } = fileReader;\r\n        this.saveFile(result);\r\n      };\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  onDocumentLoadSuccess = ({ numPages }) => {\r\n    this.setState({ numPages });\r\n  };\r\n\r\n  saveFile = async (fileData) => {\r\n    try {\r\n      const res = await axios.post('/api/upload', { fileData });\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  handleFileUpload = () => {\r\n    // You should implement the logic for file upload here.\r\n    // You may use axios to send the file to your server.\r\n    console.log('File upload logic goes here');\r\n  };\r\n\r\n  render() {\r\n    const { numPages, file, pdfName } = this.state;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Upload a PDF\r\n            </Typography>\r\n            <TextField\r\n              fullWidth\r\n              value={pdfName}\r\n              label=\"PDF Name\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              ref={this.fileInput}\r\n              style={{ display: 'none' }}\r\n              onChange={this.handleFileInputChange}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              disabled={!file}\r\n              onClick={this.handleFileUpload}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ height: '70vh', border: '1px solid rgba(0, 0, 0, 0.5)' }}>\r\n              <Document\r\n                file={file}\r\n                onLoadSuccess={this.onDocumentLoadSuccess}\r\n              >\r\n                <Page pageNumber={1} />\r\n              </Document>\r\n            </div>\r\n            <div>\r\n              <Typography variant=\"h6\">Page {numPages || '--'}</Typography>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PDFViewer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { TimelineCard } from './TimelineCard';\nimport { addYearsFlags } from './utils';\nimport { Navigation, classNames, guid } from '@progress/kendo-react-common';\nimport { useInternationalization } from '@progress/kendo-react-intl';\nexport var TimelineVertical = function (props) {\n  var intl = useInternationalization();\n\n  var _a = React.useState(),\n      eventsList = _a[0],\n      setEventsList = _a[1];\n\n  var collapsibleEvents = props.collapsibleEvents,\n      transitionDuration = props.transitionDuration,\n      eventsData = props.eventsData,\n      dateFormat = props.dateFormat,\n      alterMode = props.alterMode,\n      navigatable = props.navigatable,\n      onChange = props.onChange,\n      onActionClick = props.onActionClick;\n  var eventAxisRef = React.useRef(null);\n  var navigation = React.useRef(new Navigation({\n    tabIndex: 0,\n    root: eventAxisRef,\n    selectors: ['.k-card-vertical']\n  }));\n  React.useEffect(function () {\n    if (eventAxisRef.current) {\n      if (props.navigatable) {\n        setTimeout(function () {\n          var firstCell = navigation.current.first;\n\n          if (firstCell) {\n            firstCell.setAttribute('tabindex', String(0));\n          }\n        }, 0);\n        navigation.current.keyboardEvents = {\n          keydown: {\n            'Space': onEnter,\n            'Enter': onEnter\n          }\n        };\n      }\n    }\n  }, [props.navigatable]);\n  React.useEffect(function () {\n    setEventsList(addYearsFlags(eventsData));\n  }, []);\n  React.useEffect(function () {\n    navigation.current.update();\n  });\n\n  var handleKeyDown = function (e) {\n    if (navigatable && navigation.current) {\n      navigation.current.triggerKeyboardEvent(e);\n    }\n  };\n\n  var onEnter = function (target, _nav, ev) {\n    ev.preventDefault();\n    var element = target.querySelector('.k-card-title .k-event-collapse');\n\n    if (element) {\n      element.click();\n    }\n  };\n\n  var _alterIncreaser = 0;\n  return React.createElement(\"ul\", {\n    ref: eventAxisRef,\n    onKeyDown: handleKeyDown\n  }, eventsList && eventsList.map(function (event, index) {\n    var cardId = guid();\n    var oddIndex = (index + _alterIncreaser) % 2 === 0;\n\n    if (event.yearFlag) {\n      _alterIncreaser += 1;\n    }\n\n    return React.createElement(React.Fragment, {\n      key: index\n    }, event.yearFlag ? React.createElement(\"li\", {\n      className: \"k-timeline-flag-wrap\"\n    }, React.createElement(\"span\", {\n      className: \"k-timeline-flag\"\n    }, event.yearFlag)) : React.createElement(\"li\", {\n      className: classNames('k-timeline-event', {\n        'k-reverse': oddIndex\n      })\n    }, React.createElement(\"div\", {\n      className: \"k-timeline-date-wrap\"\n    }, React.createElement(\"span\", {\n      className: \"k-timeline-date\",\n      id: cardId\n    }, intl.formatDate(event.date, dateFormat))), React.createElement(\"a\", {\n      className: \"k-timeline-circle\"\n    }), React.createElement(TimelineCard, {\n      id: cardId,\n      tabindex: navigatable ? 0 : -1,\n      eventData: event,\n      alternated: alterMode && oddIndex,\n      collapsible: collapsibleEvents,\n      transitionDuration: transitionDuration,\n      onChange: onChange,\n      onActionClick: onActionClick\n    })));\n  }));\n};\nTimelineVertical.propTypes = {\n  onActionClick: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/node_modules/@progress/kendo-react-layout/dist/es/timeline/TimelineVertical.js"],"names":["React","PropTypes","TimelineCard","addYearsFlags","Navigation","classNames","guid","useInternationalization","TimelineVertical","props","intl","_a","useState","eventsList","setEventsList","collapsibleEvents","transitionDuration","eventsData","dateFormat","alterMode","navigatable","onChange","onActionClick","eventAxisRef","useRef","navigation","tabIndex","root","selectors","useEffect","current","setTimeout","firstCell","first","setAttribute","String","keyboardEvents","keydown","onEnter","update","handleKeyDown","e","triggerKeyboardEvent","target","_nav","ev","preventDefault","element","querySelector","click","_alterIncreaser","createElement","ref","onKeyDown","map","event","index","cardId","oddIndex","yearFlag","Fragment","key","className","id","formatDate","date","tabindex","eventData","alternated","collapsible","propTypes","func"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { TimelineCard } from './TimelineCard';\nimport { addYearsFlags } from './utils';\nimport { Navigation, classNames, guid } from '@progress/kendo-react-common';\nimport { useInternationalization } from '@progress/kendo-react-intl';\nexport var TimelineVertical = function (props) {\n    var intl = useInternationalization();\n    var _a = React.useState(), eventsList = _a[0], setEventsList = _a[1];\n    var collapsibleEvents = props.collapsibleEvents, transitionDuration = props.transitionDuration, eventsData = props.eventsData, dateFormat = props.dateFormat, alterMode = props.alterMode, navigatable = props.navigatable, onChange = props.onChange, onActionClick = props.onActionClick;\n    var eventAxisRef = React.useRef(null);\n    var navigation = React.useRef(new Navigation({\n        tabIndex: 0,\n        root: eventAxisRef,\n        selectors: ['.k-card-vertical']\n    }));\n    React.useEffect(function () {\n        if (eventAxisRef.current) {\n            if (props.navigatable) {\n                setTimeout(function () {\n                    var firstCell = navigation.current.first;\n                    if (firstCell) {\n                        firstCell.setAttribute('tabindex', String(0));\n                    }\n                }, 0);\n                navigation.current.keyboardEvents = {\n                    keydown: {\n                        'Space': onEnter,\n                        'Enter': onEnter\n                    }\n                };\n            }\n        }\n    }, [props.navigatable]);\n    React.useEffect(function () {\n        setEventsList(addYearsFlags(eventsData));\n    }, []);\n    React.useEffect(function () {\n        navigation.current.update();\n    });\n    var handleKeyDown = function (e) {\n        if (navigatable && navigation.current) {\n            navigation.current.triggerKeyboardEvent(e);\n        }\n    };\n    var onEnter = function (target, _nav, ev) {\n        ev.preventDefault();\n        var element = target.querySelector('.k-card-title .k-event-collapse');\n        if (element) {\n            element.click();\n        }\n    };\n    var _alterIncreaser = 0;\n    return (React.createElement(\"ul\", { ref: eventAxisRef, onKeyDown: handleKeyDown }, eventsList && eventsList.map(function (event, index) {\n        var cardId = guid();\n        var oddIndex = (index + _alterIncreaser) % 2 === 0;\n        if (event.yearFlag) {\n            _alterIncreaser += 1;\n        }\n        return (React.createElement(React.Fragment, { key: index }, event.yearFlag\n            ? (React.createElement(\"li\", { className: \"k-timeline-flag-wrap\" },\n                React.createElement(\"span\", { className: \"k-timeline-flag\" }, event.yearFlag)))\n            : (React.createElement(\"li\", { className: classNames('k-timeline-event', { 'k-reverse': oddIndex }) },\n                React.createElement(\"div\", { className: \"k-timeline-date-wrap\" },\n                    React.createElement(\"span\", { className: \"k-timeline-date\", id: cardId }, intl.formatDate(event.date, dateFormat))),\n                React.createElement(\"a\", { className: \"k-timeline-circle\" }),\n                React.createElement(TimelineCard, { id: cardId, tabindex: navigatable ? 0 : -1, eventData: event, alternated: alterMode && oddIndex, collapsible: collapsibleEvents, transitionDuration: transitionDuration, onChange: onChange, onActionClick: onActionClick })))));\n    })));\n};\nTimelineVertical.propTypes = {\n    onActionClick: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}
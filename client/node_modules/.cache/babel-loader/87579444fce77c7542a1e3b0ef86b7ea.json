{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Desktop\\\\AuthInMern\\\\client\\\\src\\\\components\\\\pdfViewer\\\\pdfViewer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { PDFDocument } from 'pdfjs-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction pdf() {\n  _s();\n\n  const [pdfContent, setPdfContent] = useState('');\n\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      const contents = e.target.result;\n      const pdf = await PDFDocument.load(contents);\n      const pages = pdf.getPages();\n      let extractedText = '';\n\n      for (const page of pages) {\n        const textContent = await page.getTextContent();\n        const pageText = textContent.items.map(item => item.str).join(' ');\n        extractedText += pageText;\n      }\n\n      setPdfContent(extractedText);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pdfContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(pdf, \"dOj3lAUExIX8pNB3Oj96p1a08XA=\");\n\nexport default pdfr;","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/src/components/pdfViewer/pdfViewer.js"],"names":["useState","PDFDocument","pdf","pdfContent","setPdfContent","handleFileChange","event","file","target","files","reader","FileReader","onload","e","contents","result","load","pages","getPages","extractedText","page","textContent","getTextContent","pageText","items","map","item","str","join","readAsArrayBuffer","pdfr"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMK,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAOC,CAAP,IAAa;AAC3B,YAAMC,QAAQ,GAAGD,CAAC,CAACL,MAAF,CAASO,MAA1B;AACA,YAAMb,GAAG,GAAG,MAAMD,WAAW,CAACe,IAAZ,CAAiBF,QAAjB,CAAlB;AACA,YAAMG,KAAK,GAAGf,GAAG,CAACgB,QAAJ,EAAd;AACA,UAAIC,aAAa,GAAG,EAApB;;AAEA,WAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;AACxB,cAAMI,WAAW,GAAG,MAAMD,IAAI,CAACE,cAAL,EAA1B;AACA,cAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,IAAUA,IAAI,CAACC,GAArC,EAA0CC,IAA1C,CAA+C,GAA/C,CAAjB;AACAT,QAAAA,aAAa,IAAII,QAAjB;AACD;;AAEDnB,MAAAA,aAAa,CAACe,aAAD,CAAb;AACD,KAbD;;AAeAT,IAAAA,MAAM,CAACmB,iBAAP,CAAyBtB,IAAzB;AACD,GApBD;;AAsBA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA/BQD,G;;AAiCT,eAAe4B,IAAf","sourcesContent":["import { useState } from 'react';\r\nimport { PDFDocument } from 'pdfjs-dist';\r\n\r\nfunction pdf() {\r\n  const [pdfContent, setPdfContent] = useState('');\r\n\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = async (e) => {\r\n      const contents = e.target.result;\r\n      const pdf = await PDFDocument.load(contents);\r\n      const pages = pdf.getPages();\r\n      let extractedText = '';\r\n\r\n      for (const page of pages) {\r\n        const textContent = await page.getTextContent();\r\n        const pageText = textContent.items.map((item) => item.str).join(' ');\r\n        extractedText += pageText;\r\n      }\r\n\r\n      setPdfContent(extractedText);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <div>{pdfContent}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport defaultÂ pdfr;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Desktop\\\\AuthInMern\\\\client\\\\src\\\\components\\\\Message\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Chat } from '@progress/kendo-react-conversational-ui';\nimport { marked } from 'marked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageTemplate = props => {\n  let message = props.item;\n  let parser = marked.setOptions({});\n  let parsedMessage = parser.parse(message.text);\n  let htmlToInsert = {\n    __html: parsedMessage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"k-chat-bubble\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: htmlToInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MessageTemplate;\nconst user = {\n  id: 1\n};\nconst bot = {\n  id: 0\n};\nconst initialMessages = [{\n  author: bot,\n  text: 'Type in some _Markdown_ to see it **rendered** here'\n}];\n\nconst App = () => {\n  _s();\n\n  const [messages, setMessages] = useState(initialMessages);\n\n  const addNewMessage = event => {\n    setMessages([...messages, event.message]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      user: user,\n      messages: messages,\n      onMessageSend: addNewMessage,\n      width: 400,\n      messageTemplate: MessageTemplate,\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OrQCFeJqL9pS8aNDR4fjm9C95KQ=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MessageTemplate\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/src/components/Message/index.jsx"],"names":["React","useState","Chat","marked","MessageTemplate","props","message","item","parser","setOptions","parsedMessage","parse","text","htmlToInsert","__html","user","id","bot","initialMessages","author","App","messages","setMessages","addNewMessage","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,yCAArB;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,MAAIC,OAAO,GAAGD,KAAK,CAACE,IAApB;AACA,MAAIC,MAAM,GAAGL,MAAM,CAACM,UAAP,CAAkB,EAAlB,CAAb;AACA,MAAIC,aAAa,GAAGF,MAAM,CAACG,KAAP,CAAaL,OAAO,CAACM,IAArB,CAApB;AACA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAEJ;AADS,GAAnB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,uBAAuB,EAAEG;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;KAAMT,e;AAcN,MAAMW,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE;AADO,CAAb;AAIA,MAAMC,GAAG,GAAG;AACVD,EAAAA,EAAE,EAAE;AADM,CAAZ;AAIA,MAAME,eAAe,GAAG,CACtB;AACEC,EAAAA,MAAM,EAAEF,GADV;AAEEL,EAAAA,IAAI,EAAE;AAFR,CADsB,CAAxB;;AAOA,MAAMQ,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAACiB,eAAD,CAAxC;;AAEA,QAAMK,aAAa,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,KAAK,CAAClB,OAApB,CAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAES,IADR;AAEE,MAAA,QAAQ,EAAEM,QAFZ;AAGE,MAAA,aAAa,EAAEE,aAHjB;AAIE,MAAA,KAAK,EAAE,GAJT;AAKE,MAAA,eAAe,EAAEnB,eALnB;AAME,MAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;GAAMgB,G;;MAAAA,G;AAqBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Chat } from '@progress/kendo-react-conversational-ui';\r\nimport {marked} from 'marked';\r\n\r\n\r\nconst MessageTemplate = (props) => {\r\n  let message = props.item;\r\n  let parser = marked.setOptions({});\r\n  let parsedMessage = parser.parse(message.text);\r\n  let htmlToInsert = {\r\n    __html: parsedMessage,\r\n  };\r\n  return (\r\n    <div className=\"k-chat-bubble\">\r\n      <div dangerouslySetInnerHTML={htmlToInsert} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst user = {\r\n  id: 1,\r\n};\r\n\r\nconst bot = {\r\n  id: 0,\r\n};\r\n\r\nconst initialMessages = [\r\n  {\r\n    author: bot,\r\n    text: 'Type in some _Markdown_ to see it **rendered** here',\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState(initialMessages);\r\n\r\n  const addNewMessage = (event) => {\r\n    setMessages([...messages, event.message]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chat\r\n        user={user}\r\n        messages={messages}\r\n        onMessageSend={addNewMessage}\r\n        width={400}\r\n        messageTemplate={MessageTemplate}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
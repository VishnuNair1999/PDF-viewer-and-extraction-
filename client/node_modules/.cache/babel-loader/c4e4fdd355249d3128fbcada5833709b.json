{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Desktop\\\\AuthInMern\\\\client\\\\src\\\\components\\\\pdfViewer\\\\pdfViewer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport pdfjs from 'pdfjs-dist'; // Use worker for PDF text extraction\n\nimport 'pdfjs-dist/build/pdf.worker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction YourComponent() {\n  _s();\n\n  const [pdfContent, setPdfContent] = useState('');\n\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      const contents = e.target.result;\n      const loadingTask = pdfjs.getDocument(contents);\n      loadingTask.promise.then(async pdf => {\n        const numPages = pdf.numPages;\n        let extractedText = '';\n\n        for (let pageNum = 1; pageNum <= numPages; pageNum++) {\n          const page = await pdf.getPage(pageNum);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(' ');\n          extractedText += pageText;\n        }\n\n        setPdfContent(extractedText);\n      });\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pdfContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(YourComponent, \"dOj3lAUExIX8pNB3Oj96p1a08XA=\");\n\n_c = YourComponent;\nexport default YourComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/src/components/pdfViewer/pdfViewer.js"],"names":["useState","pdfjs","YourComponent","pdfContent","setPdfContent","handleFileChange","event","file","target","files","reader","FileReader","onload","e","contents","result","loadingTask","getDocument","promise","then","pdf","numPages","extractedText","pageNum","page","getPage","textContent","getTextContent","pageText","items","map","item","str","join","readAsArrayBuffer"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CAEA;;AACA,OAAO,6BAAP;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMK,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAOC,CAAP,IAAa;AAC3B,YAAMC,QAAQ,GAAGD,CAAC,CAACL,MAAF,CAASO,MAA1B;AACA,YAAMC,WAAW,GAAGf,KAAK,CAACgB,WAAN,CAAkBH,QAAlB,CAApB;AAEAE,MAAAA,WAAW,CAACE,OAAZ,CAAoBC,IAApB,CAAyB,MAAOC,GAAP,IAAe;AACtC,cAAMC,QAAQ,GAAGD,GAAG,CAACC,QAArB;AACA,YAAIC,aAAa,GAAG,EAApB;;AAEA,aAAK,IAAIC,OAAO,GAAG,CAAnB,EAAsBA,OAAO,IAAIF,QAAjC,EAA2CE,OAAO,EAAlD,EAAsD;AACpD,gBAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,OAAJ,CAAYF,OAAZ,CAAnB;AACA,gBAAMG,WAAW,GAAG,MAAMF,IAAI,CAACG,cAAL,EAA1B;AACA,gBAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,IAAUA,IAAI,CAACC,GAArC,EAA0CC,IAA1C,CAA+C,GAA/C,CAAjB;AACAX,UAAAA,aAAa,IAAIM,QAAjB;AACD;;AAEDxB,QAAAA,aAAa,CAACkB,aAAD,CAAb;AACD,OAZD;AAaD,KAjBD;;AAmBAZ,IAAAA,MAAM,CAACwB,iBAAP,CAAyB3B,IAAzB;AACD,GAxBD;;AA0BA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnCQD,a;;KAAAA,a;AAqCT,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\r\nimport pdfjs from 'pdfjs-dist';\r\n\r\n// Use worker for PDF text extraction\r\nimport 'pdfjs-dist/build/pdf.worker';\r\n\r\nfunction YourComponent() {\r\n  const [pdfContent, setPdfContent] = useState('');\r\n\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = async (e) => {\r\n      const contents = e.target.result;\r\n      const loadingTask = pdfjs.getDocument(contents);\r\n\r\n      loadingTask.promise.then(async (pdf) => {\r\n        const numPages = pdf.numPages;\r\n        let extractedText = '';\r\n\r\n        for (let pageNum = 1; pageNum <= numPages; pageNum++) {\r\n          const page = await pdf.getPage(pageNum);\r\n          const textContent = await page.getTextContent();\r\n          const pageText = textContent.items.map((item) => item.str).join(' ');\r\n          extractedText += pageText;\r\n        }\r\n\r\n        setPdfContent(extractedText);\r\n      });\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <div>{pdfContent}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourComponent;\r\n"]},"metadata":{},"sourceType":"module"}
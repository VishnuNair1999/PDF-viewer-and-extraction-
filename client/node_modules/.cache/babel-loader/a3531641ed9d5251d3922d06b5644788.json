{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { TimelineHorizontal } from './TimelineHorizontal';\nimport { TimelineVertical } from './TimelineVertical';\nexport var Timeline = function (props) {\n  var collapsibleEvents = props.collapsibleEvents,\n      transitionDuration = props.transitionDuration,\n      className = props.className,\n      alterMode = props.alterMode,\n      navigatable = props.navigatable,\n      horizontal = props.horizontal,\n      events = props.events,\n      dateFormat = props.dateFormat,\n      onChange = props.onChange,\n      onActionClick = props.onActionClick;\n\n  var _a = React.useState(),\n      trackAxisWidth = _a[0],\n      setTrackAxisWidth = _a[1];\n\n  var trackWrapRef = React.useRef(null);\n  React.useEffect(function () {\n    if (trackWrapRef.current) {\n      setTrackAxisWidth(trackWrapRef.current.offsetWidth);\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    ref: trackWrapRef,\n    className: classNames('k-timeline', {\n      'k-timeline-collapsible': collapsibleEvents,\n      'k-timeline-vertical': !horizontal,\n      'k-timeline-alternating': alterMode,\n      'k-timeline-horizontal': horizontal\n    }, className),\n    style: {\n      width: \"\".concat(trackAxisWidth, \"px\")\n    }\n  }, horizontal ? React.createElement(TimelineHorizontal, {\n    navigatable: navigatable,\n    eventsData: events,\n    dateFormat: dateFormat,\n    transitionDuration: transitionDuration,\n    onActionClick: onActionClick\n  }) : React.createElement(TimelineVertical, {\n    navigatable: navigatable,\n    eventsData: events,\n    dateFormat: dateFormat,\n    alterMode: alterMode,\n    collapsibleEvents: collapsibleEvents,\n    transitionDuration: transitionDuration,\n    onChange: onChange,\n    onActionClick: onActionClick\n  }));\n};\nTimeline.defaultProps = {\n  alterMode: false,\n  collapsibleEvents: true,\n  dateFormat: 'MMM dd, yyyy'\n};\nTimeline.propTypes = {\n  className: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/node_modules/@progress/kendo-react-layout/dist/es/timeline/Timeline.js"],"names":["React","PropTypes","classNames","TimelineHorizontal","TimelineVertical","Timeline","props","collapsibleEvents","transitionDuration","className","alterMode","navigatable","horizontal","events","dateFormat","onChange","onActionClick","_a","useState","trackAxisWidth","setTrackAxisWidth","trackWrapRef","useRef","useEffect","current","offsetWidth","createElement","ref","style","width","concat","eventsData","defaultProps","propTypes","string"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { TimelineHorizontal } from './TimelineHorizontal';\nimport { TimelineVertical } from './TimelineVertical';\nexport var Timeline = function (props) {\n    var collapsibleEvents = props.collapsibleEvents, transitionDuration = props.transitionDuration, className = props.className, alterMode = props.alterMode, navigatable = props.navigatable, horizontal = props.horizontal, events = props.events, dateFormat = props.dateFormat, onChange = props.onChange, onActionClick = props.onActionClick;\n    var _a = React.useState(), trackAxisWidth = _a[0], setTrackAxisWidth = _a[1];\n    var trackWrapRef = React.useRef(null);\n    React.useEffect(function () {\n        if (trackWrapRef.current) {\n            setTrackAxisWidth(trackWrapRef.current.offsetWidth);\n        }\n    }, []);\n    return (React.createElement(\"div\", { ref: trackWrapRef, className: classNames('k-timeline', {\n            'k-timeline-collapsible': collapsibleEvents,\n            'k-timeline-vertical': !horizontal,\n            'k-timeline-alternating': alterMode,\n            'k-timeline-horizontal': horizontal\n        }, className), style: { width: \"\".concat(trackAxisWidth, \"px\") } }, horizontal ? React.createElement(TimelineHorizontal, { navigatable: navigatable, eventsData: events, dateFormat: dateFormat, transitionDuration: transitionDuration, onActionClick: onActionClick })\n        : React.createElement(TimelineVertical, { navigatable: navigatable, eventsData: events, dateFormat: dateFormat, alterMode: alterMode, collapsibleEvents: collapsibleEvents, transitionDuration: transitionDuration, onChange: onChange, onActionClick: onActionClick })));\n};\nTimeline.defaultProps = {\n    alterMode: false,\n    collapsibleEvents: true,\n    dateFormat: 'MMM dd, yyyy'\n};\nTimeline.propTypes = {\n    className: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Desktop\\\\AuthInMern\\\\client\\\\src\\\\components\\\\pdfViewer\\\\pdfViewer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { pdfjs, Document, Page } from 'react-pdf';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction PDFViewer() {\n  _s();\n\n  const [numPages, setNumPages] = useState(null);\n  const [file, setFile] = useState(null);\n  const [pdfName, setPdfName] = useState('');\n  const fileInput = useRef(null);\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n\n    if (file) {\n      setFile(file);\n      setPdfName(file.name);\n      const fileReader = new FileReader();\n\n      fileReader.onload = () => {\n        const {\n          result\n        } = fileReader;\n        saveFile(result);\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  };\n\n  const onDocumentLoadSuccess = _ref => {\n    let {\n      numPages\n    } = _ref;\n    setNumPages(numPages);\n  };\n\n  const saveFile = async fileData => {\n    try {\n      const res = await axios.post('/api/upload', {\n        fileData\n      });\n      console.log(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleFileUpload = () => {\n    // You should implement the logic for file upload here.\n    // You may use axios to send the file to your server.\n    console.log('File upload logic goes here');\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Upload a PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          value: pdfName,\n          label: \"PDF Name\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInput,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 24\n          }, this),\n          disabled: !file,\n          onClick: handleFileUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '70vh',\n            border: '1px solid rgba(0, 0, 0, 0.5)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Document, {\n            file: file,\n            onLoadSuccess: onDocumentLoadSuccess,\n            children: /*#__PURE__*/_jsxDEV(Page, {\n              pageNumber: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Page \", numPages || '--']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PDFViewer, \"BofIRVbLBAP3znxiNDFgLnwxm+I=\", false, function () {\n  return [useStyles];\n});\n\n_c = PDFViewer;\nexport default PDFViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"sources":["C:/Users/vishn/Desktop/AuthInMern/client/src/components/pdfViewer/pdfViewer.js"],"names":["React","useState","useRef","pdfjs","Document","Page","axios","Grid","Typography","TextField","Button","makeStyles","SaveIcon","GlobalWorkerOptions","workerSrc","version","useStyles","theme","button","margin","spacing","PDFViewer","numPages","setNumPages","file","setFile","pdfName","setPdfName","fileInput","handleFileInputChange","e","target","files","name","fileReader","FileReader","onload","result","saveFile","readAsArrayBuffer","onDocumentLoadSuccess","fileData","res","post","console","log","data","err","handleFileUpload","classes","readOnly","display","height","border"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { pdfjs, Document, Page } from 'react-pdf';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction PDFViewer() {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [pdfName, setPdfName] = useState('');\r\n  const fileInput = useRef(null);\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFile(file);\r\n      setPdfName(file.name);\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        const { result } = fileReader;\r\n        saveFile(result);\r\n      };\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const saveFile = async (fileData) => {\r\n    try {\r\n      const res = await axios.post('/api/upload', { fileData });\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    // You should implement the logic for file upload here.\r\n    // You may use axios to send the file to your server.\r\n    console.log('File upload logic goes here');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Upload a PDF\r\n          </Typography>\r\n          <TextField\r\n            fullWidth\r\n            value={pdfName}\r\n            label=\"PDF Name\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInput}\r\n            style={{ display: 'none' }}\r\n            onChange={handleFileInputChange}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            disabled={!file}\r\n            onClick={handleFileUpload}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div style={{ height: '70vh', border: '1px solid rgba(0, 0, 0, 0.5)' }}>\r\n            <Document\r\n              file={file}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n            >\r\n              <Page pageNumber={1} />\r\n            </Document>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"h6\">Page {numPages || '--'}</Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PDFViewer;\r\n"]},"metadata":{},"sourceType":"module"}
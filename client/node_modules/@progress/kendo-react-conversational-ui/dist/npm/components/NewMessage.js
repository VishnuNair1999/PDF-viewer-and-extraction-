"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var kendo_react_common_1 = require("@progress/kendo-react-common");
var React = require("react");
var Toolbar_1 = require("./Toolbar");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
/**
 * @hidden
 */
var NewMessage = /** @class */ (function (_super) {
    __extends(NewMessage, _super);
    function NewMessage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { focused: false };
        _this.inputEl = null;
        _this.onInputKeyDown = function (event) {
            if (event.keyCode === kendo_react_common_1.Keys.enter) {
                _this.sendMessage(event);
            }
        };
        _this.sendMessage = function (event) {
            if (_this.props.onMessageSend && _this.inputEl !== null) {
                var messageText = _this.inputEl.value;
                if (messageText) {
                    var message = {
                        author: _this.props.user,
                        text: messageText,
                        timestamp: new Date()
                    };
                    _this.props.onMessageSend(message, event);
                }
            }
            if (_this.inputEl !== null) {
                _this.inputEl.value = null;
            }
        };
        return _this;
    }
    NewMessage.prototype.render = function () {
        var _this = this;
        var localizationService = (0, kendo_react_intl_1.provideLocalizationService)(this);
        var messageInput = (React.createElement("input", { type: "text", className: this.getClassNames(), placeholder: this.props.placeholder, onKeyDown: this.onInputKeyDown, onFocus: function () { return _this.setState({ focused: true }); }, onBlur: function () { return _this.setState({ focused: false }); }, ref: function (el) { return _this.inputEl = el; }, "aria-label": localizationService.toLanguageString(messages_1.newMessageMessageInput, messages_1.messages[messages_1.newMessageMessageInput]) }));
        var sendButton = (React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", themeColor: "base", className: "k-chat-send", icon: "paper-plane", svgIcon: kendo_svg_icons_1.paperPlaneIcon, onClick: this.sendMessage, "aria-label": localizationService.toLanguageString(messages_1.newMessageSendButton, messages_1.messages[messages_1.newMessageSendButton]), dir: this.props.isDirectionRightToLeft ? 'rtl' : undefined }));
        var toolbarButton = (React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", themeColor: "base", rounded: null, className: "k-button-toggle", icon: 'more-horizontal', svgIcon: kendo_svg_icons_1.moreHorizontalIcon, onClick: function (event) { return _this.props.onToolbarActionButtonClick(!_this.props.showToolbar, event); }, "aria-label": localizationService.toLanguageString(messages_1.newMessageOptionsButton, messages_1.messages[messages_1.newMessageOptionsButton]) }));
        return (React.createElement(React.Fragment, null,
            React.createElement("span", { className: "k-message-box k-textbox k-input k-input-md k-rounded-md k-input-solid" }, this.props.MessageBox ?
                React.createElement(this.props.MessageBox, { messageInput: messageInput, sendButton: sendButton, toolbarButton: toolbarButton }) :
                React.createElement(React.Fragment, null,
                    messageInput,
                    React.createElement("span", { className: "k-input-suffix" },
                        this.props.toolbar && toolbarButton,
                        sendButton))),
            this.props.showToolbar && React.createElement(Toolbar_1.default, null, this.props.toolbar)));
    };
    NewMessage.prototype.focusInput = function () {
        if (this.inputEl !== null) {
            this.inputEl.focus();
        }
    };
    NewMessage.prototype.getClassNames = function () {
        return (0, kendo_react_common_1.classNames)('k-input-inner', { 'k-focus': this.state.focused });
    };
    return NewMessage;
}(React.Component));
exports.default = NewMessage;
